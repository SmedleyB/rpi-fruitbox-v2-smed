# Instructions to build fruitbox from source code on Raspberry Pi
# ---------------------------------------------------------------

# For non-desktop (Lite) OS's, don't use kernel version 5.10, broken ALSA non-blocking audio, so use latest before that, i.e.

# https://downloads.raspberrypi.org/raspios_oldstable_lite_armhf/images/raspios_oldstable_lite_armhf-2022-01-28/2022-01-28-raspios-buster-armhf-lite.zip

sudo apt-get update --allow-releaseinfo-change

# Assumes you have downloaded (wget https://codeload.github.com/chundermike/rpi-fruitbox-v2/zip/main)
# and unzipped fruitbox master into the pi home directory and run apt-get update.

############################################################
# install and build libmpg123 as static library...
# Note that modifications have been done to equalizer.c in order to implement
# the spectrum analyser feture in fruitbox, so the modified equalizer.c must be 
# copied into the correct directory after the tarball has been expanded
# (part of the steps below)

cd ~/fruitbox/build/libmpg123
tar -xvf mpg123-1.29.3.tar.bz2
cp equalizer.c mpg123-1.29.3/src/libmpg123/equalizer.c
cd mpg123-1.29.3
chmod +x configure

# For Pi0-3 on Lite, or Pi4 on 32-bit desktop...
./configure --with-cpu=arm_fpu --disable-shared

# For Pi4 on 64-bit desktop...
./configure --with-cpu=aarch64 --disable-shared

sudo apt-get install automake-1.15
make && sudo make install

# install fruitbox dependencies...
sudo apt-get install -y build-essential libcurl4-gnutls-dev

############################################################
# install and build allegro as static library...
# install allegro dependencies...
sudo apt-get install -y build-essential git cmake xorg-dev libgl1-mesa-dev libgles2-mesa-dev libglu-dev libdumb1 libjpeg-dev libfreetype6-dev libpng-dev libasound-dev libxcursor-dev libvorbis-dev libtheora-dev

# touch support (jessie only?)...
sudo apt-get install libts-dev

# If using raspbian Lite distribution Stretch onwards do the following five lines...

cd /opt/vc/lib
sudo ln -s libbrcmEGL.so libEGL.so
sudo ln -s libbrcmGLESv2.so libGLESv2.so
sudo ln -s libbrcmOpenVG.so libOpenVG.so
sudo ln -s libbrcmWFC.so libWFC.so

cd ~/fruitbox/build/liballegro
tar -xvf allegro-5.2.5.0.tar
cd allegro-5.2.5.0
mkdir build && cd build

# for Pi Zero,1,2,3 on Lite...

cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-raspberrypi.cmake -DSHARED=off

# or for Pi 4 on desktop...
cmake .. -DCMAKE_BUILD_TYPE=Release -DSHARED=off

# you can ignore the warnings about libwebp, libFLAC, libdumb and libopus not being found
# they aren't needed for fruitbox.

make && sudo make install

# you can ignore the warnings about: unused 'display', 'maximized' and 'info' parameters; the signedness
# of pointer targets for ‘eglGetProcAddress’and ‘load_extension’; ‘ogl_flip_blocks’ being defined but not
# used; and, the implicit declaration of function ‘glFramebufferTexture2DMultisampleEXT’.

##################################################################
# build fruitbox...
# Note the different Makefiles for different Pi hardware and Lite or Desktop environments
# Build directives are...
# _RPI      -> Enables Pi-specific hardware code (i.e. GPIO, direct register access)
#              Don't define this if you are targetting non-Pi hardware
# _RPI4     -> Enables video refresh timer rather than vsync for video timing
               (to prevent fruitbox running too fast under Desktop - there's a bug
                in Pi4 + desktop which affects correct vsync operation)
            -> Defines correct Github path for Software Update
# _RPI4_32  -> Defines correct Github path for Software Update
               Note _RPI4 must be defined if _RPI4_32 is defined
               
cd ~/fruitbox/build # back to the fruitbox build directory

# For Pi Zero,1,2,3...
make
cd ..
ln -s rpi/fruitbox fruitbox

# For Pi 4 on 64-bit desktop...
make -f Makefile_pi4.mak
cd ..
ln -s rpi4/fruitbox fruitbox

# For Pi 4 on 32-bit desktop...
make -f Makefile_pi4_32.mak
cd ..
ln -s rpi4_32/fruitbox fruitbox